{"version":3,"file":"main.js","mappings":";k0BAAA,IAGqBA,EAAI,WAkBvB,SAAAA,EAAAC,EAAAC,GAIE,IAAAC,EAAA,KAHEC,EAASH,EAATG,UAAWC,EAAWJ,EAAXI,YAAaC,EAAKL,EAALK,MAAOC,EAAMN,EAANM,OAAQC,EAAOP,EAAPO,QAASC,EAAIR,EAAJQ,KAChDC,EAAeR,EAAfQ,gBAAiBC,EAAaT,EAAbS,cAAeC,EAAeV,EAAfU,gBAChCC,EAAoBX,EAApBW,qBAAsBC,EAAeZ,EAAfY,6GAAeC,CAAA,KAAAf,GA6BzCgB,EAAA,yBAImB,WACjB,OAAOC,SACJC,cAAef,EAAKgB,mBACpBC,QACAF,cAAef,EAAKkB,qBACpBC,WAAW,EAChB,IAEAN,EAAA,oCAK8B,WAC5B,OAAOb,EAAKoB,SAASC,UAAUC,SAAUtB,EAAKuB,kBAC1CvB,EAAKwB,wBACLxB,EAAKyB,kBACX,IAEAZ,EAAA,6BAIuB,WACfb,EAAK0B,mBACT1B,EAAK2B,sBACL3B,EAAK4B,mBAET,IAACf,EAAA,2BAEoB,WACnBb,EAAK6B,KAAKC,iBAAkB,SAAS,WACnC9B,EAAK+B,gBAAiB/B,EAAKgC,aAAchC,EAAKiC,WAChD,IACAjC,EAAKoB,SAASU,iBAAkB,YAAa9B,EAAKkC,sBAClDlC,EAAKmC,aAAaL,iBAAkB,QAAS9B,EAAKoC,eACpD,IAEAvB,EAAA,mBAGa,WACXb,EAAKqC,cAAcC,SACnBtC,EAAKqC,cAAgB,IACvB,IAACxB,EAAA,kBAEW,WACVb,EAAK6B,KAAKU,IAAMvC,EAAKgC,aACrBhC,EAAK6B,KAAKW,KAAO,IAAJC,OAASzC,EAAKiC,YAC3BjC,EAAK0C,UAAUC,YAAc3C,EAAKiC,WAClCjC,EAAK4C,cAAe5C,EAAK6C,QACzB7C,EAAK8C,cACL9C,EAAK+C,cACP,IAEAlC,EAAA,oBAIc,WACPb,EAAKgD,eAAiBhD,EAAKiD,OAC9BjD,EAAKmC,aAAad,UAAU6B,IAAKlD,EAAKmD,oBAE1C,IAACtC,EAAA,qBAEc,WACbb,EAAKoB,SAASC,UAAU+B,OAAQpD,EAAKuB,iBACvC,IAACV,EAAA,4BAMqB,WACpBb,EAAK0B,iBACD1B,EAAK0B,kBAAmB,EACxB1B,EAAK0B,kBAAmB,CAC9B,IAKAb,EAAA,qBAGe,WACbb,EAAK6C,OAAOQ,SAAS,SAAAC,GACdA,EAAQC,MAAQvD,EAAKiD,OACxBjD,EAAKwD,cAET,GACF,IAEA3C,EAAA,qBAMe,WAIb,OAHAb,EAAKyD,YACLzD,EAAK0D,qBAEE1D,EAAKqC,aACd,IAvIEsB,KAAK1B,WAAahC,EAClB0D,KAAK3B,aAAe9B,EACpByD,KAAKd,OAAS1C,EACdwD,KAAKX,aAAe3C,EACpBsD,KAAKV,MAAQ3C,EAEbqD,KAAK5B,gBAAkBxB,EACvBoD,KAAKvB,eAAiB5B,EACtBmD,KAAKlC,iBAAmBhB,EACxBkD,KAAKnC,sBAAwBd,EAC7BiD,KAAK/B,iBAAmBjB,EAExBgD,KAAK3C,kBAAoBZ,EAAOwD,iBAChCD,KAAKzC,oBAAsBd,EAAOyD,aAClCF,KAAKpC,iBAAmBnB,EAAO0D,gBAC/BH,KAAKR,oBAAsB/C,EAAO2D,mBAElCJ,KAAKtB,cAAgBsB,KAAKK,mBAC1BL,KAAK9B,KAAO8B,KAAKtB,cAActB,cAAeX,EAAO6D,aACrDN,KAAKjB,UAAYiB,KAAKtB,cAActB,cAAeX,EAAO8D,eAC1DP,KAAKvC,SAAWuC,KAAKtB,cAActB,cAAeX,EAAO+D,cACzDR,KAAKxB,aAAewB,KAAKtB,cAActB,cAAeX,EAAOgE,gBAC7DT,KAAKU,oBAAsBV,KAAKtB,cAActB,cAAeX,EAAOkE,mBAEpEX,KAAKjC,kBAAmB,CAC1B,SA6EC,SA7EA7B,KAAA,EAAA0E,IAAA,gBAAAC,MA2ED,SAAerE,GACbwD,KAAKU,oBAAoB1B,YAAcxC,EAAMsE,MAC/C,0EAAC5E,CAAA,CA7HsB,kzBCHzB,IAGqB6E,EAAa,WAOhC,SAAAA,EAAatE,EAAQuE,GAAO,IAAA3E,EAAA,kGAAAY,CAAA,KAAA8D,GAAA7D,EAAA,yBAQT,SAAE8D,EAAMC,GACzB,OAAOC,MAAMC,KAAMH,EAAKI,iBAAkBH,GAC5C,IAAC/D,EAAA,yBAEkB,WACjB,OAAOb,EAAKgF,WAAWC,MAAM,SAAAC,GAAK,OAAKlF,EAAKmF,eAAgBD,EAAO,GACrE,IAACrE,EAAA,wBAEiB,SAAEuE,EAAWC,EAAcC,GAC3CA,EAAajE,UAAU6B,IAAKlD,EAAKuF,uBACjCF,EAAa1C,YAAcyC,CAC7B,IAACvE,EAAA,wBAEiB,SAAEwE,EAAcC,GAChCA,EAAajE,UAAUiB,OAAQtC,EAAKuF,uBACpCF,EAAa1C,YAAc,EAC7B,IAAC9B,EAAA,4BAEqB,SAAEyE,EAAcD,GACpCrF,EAAKmF,eAAgBG,GACjBtF,EAAKwF,gBAAkBH,EAAcC,GACrCtF,EAAKyF,gBACHH,EAAaI,kBACbL,EACAC,EAER,IAACzE,EAAA,2BAMoB,WACnBb,EAAK2F,mBACH3F,EAAK4F,WAAWC,aAAc,YAAY,GAC1C7F,EAAK4F,WAAWE,gBAAiB,WACrC,IAIAjF,EAAA,2BACqB,WACnBb,EAAK+F,MAAMjE,iBAAkB,SAAS,SAAAkE,GACpCA,EAAGC,iBACHjG,EAAKgF,WAAW3B,SAAS,SAAEiC,EAAcY,GACvCZ,EAAad,MAAQ,GACrBxE,EAAKwF,gBAAiBxF,EAAKmG,WAAYD,GAASZ,EAClD,IACAtF,EAAKoG,oBACP,IAEApG,EAAKgF,WAAW3B,SAAS,SAAEiC,EAAcY,GACvCZ,EAAaxD,iBAAkB,SAAS,WACtC9B,EAAKqG,oBAAqBf,EAActF,EAAKmG,WAAWD,IACxDlG,EAAKoG,oBACP,GACF,GACF,IAEAvF,EAAA,yBAGmB,WACjBb,EAAK0D,oBACP,IAvEEC,KAAK4B,sBAAwBnF,EAAOkG,qBACpC3C,KAAKoC,MAAQpB,EACbhB,KAAKqB,WAAarB,KAAK4C,iBAAkB5B,EAAMvE,EAAOoG,eACtD7C,KAAKwC,WAAaxC,KAAK4C,iBAAkB5B,EAAMvE,EAAOqG,eACtD9C,KAAKiC,WAAajB,EAAK5D,cAAeX,EAAOsG,kBAC/C,SAgCC,SAhCAhC,KAAA,EAAAH,IAAA,iBAAAC,MA8BD,SAAgBmC,GACd,OAAOA,EAAKC,SAASC,KACvB,0EAACnC,CAAA,CA7C+B,sqBCHlC,IAGqBoC,EAAK,WAOxB,SAAAA,EAAAhH,EAAkDiH,GAAgB,IAAnDC,EAAalH,EAAbkH,cAAeC,EAAgBnH,EAAhBmH,8GAAgBrG,CAAA,KAAAkG,GAC5CnD,KAAKuD,kBAAoBD,EACzBtD,KAAKwD,eAAiBH,EACtBrD,KAAKyD,OAAStG,SAASC,cAAegG,GACtCpD,KAAK0D,gBAAkB1D,KAAK0D,gBAAgBC,KAAM3D,MAClDA,KAAK4D,KAAO5D,KAAK4D,KAAKD,KAAM3D,KAC9B,SAmCC,SAjCDmD,KAAA,EAAAvC,IAAA,OAAAC,MAKA,WACEb,KAAKyD,OAAO/F,UAAU6B,IAAKS,KAAKuD,mBAChCpG,SAASgB,iBAAkB,UAAW6B,KAAK0D,gBAC7C,GAAC,CAAA9C,IAAA,kBAAAC,MAED,SAAiBwB,GACC,WAAXA,EAAGzB,KAAqBZ,KAAK6D,OACpC,GAEA,CAAAjD,IAAA,QAAAC,MAGA,WACEb,KAAKyD,OAAO/F,UAAUiB,OAAQqB,KAAKuD,mBACnCpG,SAAS2G,oBAAqB,UAAW9D,KAAK0D,gBAChD,GAEA,CAAA9C,IAAA,oBAAAC,MAIA,WAAoB,IAAAxE,EAAA,KAClB2D,KAAKyD,OAAOtF,iBAAkB,aAAa,SAAAkE,IACrCA,EAAG0B,OAAOrG,UAAUC,SAAUtB,EAAKkH,oBACnClB,EAAG0B,OAAOrG,UAAUC,SAAUtB,EAAKmH,kBACrCnH,EAAKwH,OAET,GACF,0EAACV,CAAA,CAhDuB,0/CCD1B,IAGqBa,EAAa,SAAAC,yRAAAC,CAAAF,EAAAC,GAAA,YAAAE,KAAAH,+jBAWhC,SAAAA,EAAA7H,EAGGiI,GAAiB,IAAA/H,EAFlBgI,EAAWlI,EAAXkI,YAAaxB,EAAa1G,EAAb0G,cAAeO,EAAajH,EAAbiH,cAAekB,EAAQnI,EAARmI,SAC3CC,EAAiBpI,EAAjBoI,kBAAmBC,EAAuBrI,EAAvBqI,wBAauC,mGAbhBvH,CAAA,KAAA+G,GAqB5C9G,EAAAuH,EAlBEpI,EAAA8H,EAAAO,KAAA,KAAOL,EAAajB,IAkBtB,kBACiB,SAAEuB,GACjBtI,EAAKuI,QAAQlF,SAAS,SAAE6B,EAAOsD,GAAC,OAC9BtD,EAAMV,MAAQ8D,EAAQpD,EAAMuD,aAAc,QAAU,GAExD,IAAC5H,EAAAuH,EAAApI,GAAA,uBAoCqB,WACpBA,EAAK4F,WAAWjD,cAAgB3C,EAAK0I,uBACjC1I,EAAK4F,WAAWjD,YAAc3C,EAAK2I,yBACnC3I,EAAK4F,WAAWjD,YAAc3C,EAAK0I,sBACzC,IA9DE1I,EAAK4I,gBAAkBb,EACvB/H,EAAK6I,YAAcrC,EACnBxG,EAAK2I,yBAA2BR,EAEhCnI,EAAK+F,MAAQjF,SAASgI,MAAMb,GAC5BjI,EAAKuI,QAAU1D,MAAMC,KACnB9E,EAAK+F,MAAMhB,iBAAkB/E,EAAK6I,cAEpC7I,EAAK4F,WAAa5F,EAAK+F,MAAMhF,cAAemH,GAC5ClI,EAAK0I,uBAAyB1I,EAAK4F,WAAWjD,YAAY3C,CAC5D,CAmEC,SAnEA2H,KAAA,EAAApD,IAAA,kBAAAC,MAqBD,WACE,OAAOb,KAAK4E,QAAQQ,QAAO,SAACC,EAAM9D,GAEhC,OADA8D,EAAK9D,EAAMuD,aAAa,SAAWvD,EAAMV,MAClCwE,CACT,GAAG,CAAC,EACN,GAEA,CAAAzE,IAAA,oBAAAC,MAGA,WAAoB,IAAAyE,EAAA,KAClBC,EAAAC,EAAAxB,EAAAyB,WAAA,0BAAAf,KAAA,MACA1E,KAAKoC,MAAMjE,iBAAkB,UAAU,SAACkE,GACtCA,EAAGC,iBACHgD,EAAKI,iBACP,GACF,GAEA,CAAA9E,IAAA,kBAAAC,MAIA,WACEb,KAAK2F,sBACL3F,KAAKiF,gBAAiBjF,KAAK4F,kBAC7B,GAAC,CAAAhF,IAAA,QAAAC,MAWD,WACEb,KAAKoC,MAAMyD,QACXN,EAAAC,EAAAxB,EAAAyB,WAAA,cAAAf,KAAA,KACF,GAEA,CAAA9D,IAAA,OAAAC,MAGA,WACE0E,EAAAC,EAAAxB,EAAAyB,WAAA,aAAAf,KAAA,KACF,0EAACV,CAAA,CA9F+B,CAASb,mvCCJ3C,IAGqB2C,EAAc,SAAA7B,yRAAAC,CAAA4B,EAAA7B,GAAA,YAAAE,KAAA2B,urBASjC,SAAAA,EAAA3J,GAMI,IAAAE,EALFgI,EAAWlI,EAAXkI,YACAjB,EAAajH,EAAbiH,cACA2C,EAAc5J,EAAd4J,eACAzF,EAAWnE,EAAXmE,YACA0F,EAAkB7J,EAAlB6J,mBAMoE,mGANlD/I,CAAA,KAAA6I,IAGlBzJ,EAAA8H,EAAAO,KAAA,KAAOL,EAAajB,IACf6C,QAAU9I,SAASC,cAAe2I,GACvC1J,EAAK6J,WAAa7J,EAAK4J,QAAQ7I,cAAekD,GAC9CjE,EAAK8J,YAAc9J,EAAK4J,QAAQ7I,cAAe4I,GAAqB3J,CACtE,CAYC,SAVDyJ,KAAA,EAAAlF,IAAA,OAAAC,MAKA,SAAMtE,EAAaD,GACjB0D,KAAKkG,WAAWtH,IAAMrC,EACtByD,KAAKkG,WAAWrH,IAAMvC,EACtB0D,KAAKmG,YAAYnH,YAAc1C,EAC/BiJ,EAAAC,EAAAM,EAAAL,WAAA,aAAAf,KAAA,KACF,0EAACoB,CAAA,CAjCgC,CAAS3C,qrBCJ5C,IAGqBiD,EAAO,WAM1B,SAAAA,EAAaC,EAAaC,GAAgB,UAAAjK,EAAA,kGAAAY,CAAA,KAAAmJ,KAe1C,OAIU,SAAEG,GACVlK,EAAKmK,OAAOC,QAASF,EACvB,SANA,sGAdEvG,KAAKwG,OAASrJ,SAASC,cAAekJ,GACtCtG,KAAK0G,UAAYL,CACnB,SAUC,SARDD,KAAA,EAAAxF,IAAA,cAAAC,MAIA,SAAawE,GACX,IAAM,IAAIR,EAAIQ,EAAKvE,OAAS,EAAG+D,GAAK,EAAGA,IACrC7E,KAAK0G,UAAWrB,EAAMR,GAE1B,0EAACuB,CAAA,CAnByB,qrBCH5B,IAGqBO,EAAQ,WAO3B,SAAAA,EAAAxK,GAII,UAAAE,EAAA,KAHFuK,EAAyBzK,EAAzByK,0BACAC,EAA0B1K,EAA1B0K,2BACAC,EAAkB3K,EAAlB2K,gHAAkB7J,CAAA,KAAA0J,KAQpB,OAIc,WAGZ,MAAO,CACLI,SAAU1K,EAAK2K,eAAehI,YAC9BiI,UAAW5K,EAAK6K,gBAAgBlI,YAEpC,SAXA,0GALEgB,KAAKgH,eAAiB7J,SAASC,cAAewJ,GAC9C5G,KAAKkH,gBAAkB/J,SAASC,cAAeyJ,GAC/C7G,KAAKmH,YAAchK,SAASC,cAAe0J,EAC7C,SAwCC,SAxCAH,KAAA,EAAA/F,IAAA,cAAAC,MAoBD,SAAauG,EAASC,GACpBrH,KAAKgH,eAAehI,YAAcoI,EAClCpH,KAAKkH,gBAAgBlI,YAAcqI,CACrC,GAEA,CAAAzG,IAAA,YAAAC,MAIA,SAAWyG,GACTtH,KAAKmH,YAAYvI,IAAM0I,CACzB,GAEA,CAAA1G,IAAA,qBAAAC,MAIA,SAAoBwE,GAClBrF,KAAKuH,YAAalC,EAAKmC,KAAMnC,EAAKoC,OAClCzH,KAAK0H,UAAWrC,EAAKsC,OACvB,0EAAChB,CAAA,CAxD0B,sqBCH7B,IAGqBiB,EAAG,WAWtB,SAAAA,EAAAzL,GAEG,IADD0L,EAAK1L,EAAL0L,MAAOlL,EAAIR,EAAJQ,KAAMmL,EAAS3L,EAAT2L,UAAWC,EAAQ5L,EAAR4L,SAAUC,EAAM7L,EAAN6L,OAAQC,EAAM9L,EAAN8L,OAAQC,EAAO/L,EAAP+L,qGAAOjL,CAAA,KAAA2K,GAEzD5H,KAAKmI,OAASN,EACd7H,KAAKoI,WAAaN,EAClB9H,KAAKV,MAAQ3C,EACbqD,KAAKqI,UAAYN,EACjB/H,KAAKsI,QAAUN,EACfhI,KAAKuI,QAAUN,EACfjI,KAAKwI,SAAWN,CAClB,SA0IC,SAxIDN,KAAA,EAAAhH,IAAA,wBAAAC,MAIA,WAAwB,IAAAxE,EAAA,KACtB,OAAOoM,MAAOzI,KAAKoI,WAAapI,KAAKqI,UAAW,CAC9CK,QAAS,CACPC,cAAe3I,KAAKmI,UAGrBS,MAAM,SAAAC,GAAG,OAAIxM,EAAKyM,gBAAiBD,EAAK,GAC7C,GAEA,CAAAjI,IAAA,kBAAAC,MAIA,WAAkB,IAAAyE,EAAA,KAChB,OAAOmD,MAAOzI,KAAKoI,WAAapI,KAAKsI,QAAS,CAC5CI,QAAS,CACPC,cAAe3I,KAAKmI,UAGtBS,MAAM,SAAAC,GAAG,OAAIvD,EAAKwD,gBAAiBD,EAAK,GAC5C,GAEA,CAAAjI,IAAA,iBAAAC,MAMA,SAAgBuG,EAASC,GAAW,IAAA0B,EAAA,KAClC,OAAON,MAAOzI,KAAKoI,WAAapI,KAAKqI,UAAW,CAC9CW,OAAQ,QACRN,QAAS,CACPC,cAAe3I,KAAKmI,OACpB,eAAgB,oBAElBc,KAAMC,KAAKC,UAAU,CACnB3B,KAAMJ,EACNK,MAAOJ,MAGTuB,MAAM,SAAAC,GAAG,OAAIE,EAAKD,gBAAiBD,EAAK,GAC5C,GAEA,CAAAjI,IAAA,aAAAC,MAMA,SAAYuI,EAAWC,GAAU,IAAAC,EAAA,KAC/B,OAAOb,MAAOzI,KAAKoI,WAAapI,KAAKsI,QAAS,CAC5CU,OAAQ,OACRN,QAAS,CACPC,cAAe3I,KAAKmI,OACpB,eAAgB,oBAElBc,KAAMC,KAAKC,UAAU,CACnB3B,KAAM4B,EACNG,KAAMF,MAGPT,MAAM,SAAAC,GAAG,OAAIS,EAAKR,gBAAiBD,EAAK,GAC7C,GAEA,CAAAjI,IAAA,aAAAC,MAKA,SAAY2I,GAAK,IAAAC,EAAA,KACf,OAAOhB,MAAOzI,KAAKoI,WAAapI,KAAKsI,QAAUkB,EAAI,CACjDR,OAAQ,SACRN,QAAS,CACPC,cAAe3I,KAAKmI,UAGrBS,MAAM,SAAAC,GAAG,OAAIY,EAAKX,gBAAiBD,EAAK,GAC7C,GAEA,CAAAjI,IAAA,UAAAC,MAKA,SAAS2I,GAAI,IAAAE,EAAA,KACX,OAAOjB,MAAOzI,KAAKoI,WAAapI,KAAKsI,QAAUkB,EAAKxJ,KAAKuI,QAAS,CAChES,OAAQ,MACRN,QAAS,CACPC,cAAe3I,KAAKmI,UAGtBS,MAAM,SAAAC,GAAG,OAAIa,EAAKZ,gBAAiBD,EAAK,GAC5C,GAEA,CAAAjI,IAAA,aAAAC,MAKA,SAAY2I,GAAK,IAAAG,EAAA,KACf,OAAOlB,MAAOzI,KAAKoI,WAAapI,KAAKsI,QAAUkB,EAAKxJ,KAAKuI,QAAS,CAChES,OAAQ,SACRN,QAAS,CACPC,cAAe3I,KAAKmI,UAGrBS,MAAM,SAAAC,GAAG,OAAIc,EAAKb,gBAAiBD,EAAK,GAC7C,GAEA,CAAAjI,IAAA,eAAAC,MAKA,SAAc+I,GAAe,IAAAC,EAAA,KAC3B,OAAOpB,MAAOzI,KAAKoI,WAAapI,KAAKqI,UAAYrI,KAAKwI,SAAW,CAC/DQ,OAAQ,QACRN,QAAS,CACPC,cAAe3I,KAAKmI,OACpB,eAAgB,oBAElBc,KAAMC,KAAKC,UAAU,CACnBxB,OAAQiC,MAGVhB,MAAM,SAAAC,GAAG,OAAIgB,EAAKf,gBAAiBD,EAAK,GAC5C,GAAC,CAAAjI,IAAA,kBAAAC,MAED,SAAiBgI,GACf,OAAQA,EAAIiB,GAERjB,EAAIkB,OADJC,QAAQC,OAAQpB,EAAIqB,OAE1B,0EAACtC,CAAA,CA/JqB,mvCCDxB,ICmBIjL,EDhBiBwN,EAAe,SAAAlG,yRAAAC,CAAAiG,EAAAlG,GAAA,YAAAE,KAAAgG,urBAOlC,SAAAA,EAAAhO,GAGG,IAAAE,EAFDgI,EAAWlI,EAAXkI,YAAajB,EAAajH,EAAbiH,cAAekB,EAAQnI,EAARmI,SAC5BC,EAAiBpI,EAAjBoI,kBAAmBC,EAAuBrI,EAAvBqI,wBAOuC,mGAPhBvH,CAAA,KAAAkN,IAE1C9N,EAAA8H,EAAAO,KAAA,KAAOL,EAAajB,IACfgH,SACL/N,EAAK+F,MAAQjF,SAASgI,MAAMb,GAC5BjI,EAAK2I,yBAA2BR,EAChCnI,EAAK4F,WAAa5F,EAAK+F,MAAMhF,cAAemH,GAC5ClI,EAAK0I,uBAAyB1I,EAAK4F,WAAWjD,YAAY3C,CAC5D,CAsBC,SApBD8N,KAAA,EAAAvJ,IAAA,oBAAAC,MAGA,WAAoB,IAAAyE,EAAA,KAClBC,EAAAC,EAAA2E,EAAA1E,WAAA,0BAAAf,KAAA,MACA1E,KAAKoC,MAAMjE,iBAAkB,UAAU,SAACkE,GACtCiD,EAAKrD,WAAWjD,YAAcsG,EAAKN,yBACnC3C,EAAGC,iBACHgD,EAAK8E,UACP,GACF,GAEA,CAAAxJ,IAAA,OAAAC,MAKA,SAAMwJ,GACJrK,KAAKoK,SAAWC,EAChB9E,EAAAC,EAAA2E,EAAA1E,WAAA,aAAAf,KAAA,KACF,0EAACyF,CAAA,CAvCiC,CAAShH,GEJhCmH,EAAiBnN,SAASC,cAAc,sBACxCmN,EAAcpN,SAASC,cAAc,qBACrCoN,EAAgBrN,SAASC,cAAc,yBAIvCqN,EAAS,iCAGhB5H,EAAgB,gBAChB6H,EAAyB,qBACzBlG,EAA0B,gBAC1BH,EAAc,CAClBhB,cAAe,mBACfC,iBAAkB,cAIPqH,GAAuB,CAClCtG,YAAaA,EACbjB,cAAe,6BACf2C,eAAgB,iBAChBzF,YAAa,cACb0F,mBAAoB,sBAGT4E,GAAsB,CACjCvG,YAAaA,EACbxB,cAAeA,EACfO,cAAe,wBACfkB,SAAU,cACVC,kBAAmBmG,EACnBlG,wBAAyBA,GAGdqG,GAAyB,CACpCxG,YAAaA,EACbxB,cAAeA,EACfO,cAAe,2BACfkB,SAAU,kBACVC,kBAAmBmG,EACnBlG,wBAAyBA,GASdsG,GAAiB,CAC5BjI,cAAeA,EACfE,kBAAmB,qBACnBJ,qBAAsB,0BACtBG,cAAe,iBAGJiI,GAAa,CACxB7K,aAAc,oBACdI,YAAa,eACbC,cAAe,eACfC,aAAc,cACdC,eAAgB,sBAChBN,gBAAiB,oBACjBF,iBAAkB,YAClBU,kBAAmB,oBACnBP,mBAAoB,cAqBT4K,GAAwB,CACnC3G,YAAaA,EACbxB,cAAeA,EACfO,cAAe,yBACfkB,SAAU,eACVC,kBAAmBmG,EACnBlG,wBAAyBA,gxCD7F3ByG,GAAA,kBAAAC,CAAA,MAAAA,EAAA,GAAAC,EAAAC,OAAA3F,UAAA4F,EAAAF,EAAAG,eAAAC,EAAAH,OAAAG,gBAAA,SAAAC,EAAA5K,EAAA6K,GAAAD,EAAA5K,GAAA6K,EAAA5K,KAAA,EAAA6K,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAV,EAAA5K,EAAAC,GAAA,OAAAuK,OAAAG,eAAAC,EAAA5K,EAAA,CAAAC,MAAAA,EAAAsL,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAb,EAAA5K,EAAA,KAAAsL,EAAA,aAAAI,GAAAJ,EAAA,SAAAV,EAAA5K,EAAAC,GAAA,OAAA2K,EAAA5K,GAAAC,CAAA,WAAA0L,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,GAAAA,EAAAhH,qBAAAoH,EAAAJ,EAAAI,EAAAC,EAAA1B,OAAA2B,OAAAH,EAAAnH,WAAAuH,EAAA,IAAAC,EAAAN,GAAA,WAAApB,EAAAuB,EAAA,WAAAjM,MAAAqM,EAAAV,EAAAE,EAAAM,KAAAF,CAAA,UAAAK,EAAAC,EAAA5B,EAAA6B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAA1I,KAAA8G,EAAA6B,GAAA,OAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,EAAA,EAAApB,EAAAqB,KAAAA,EAAA,IAAAgB,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,GAAA,8BAAA+B,EAAAvC,OAAAwC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAhJ,EAAA,MAAAkJ,GAAAA,IAAA1C,GAAAE,EAAA3G,KAAAmJ,EAAAjC,KAAA8B,EAAAG,GAAA,IAAAC,EAAAL,EAAAhI,UAAAoH,EAAApH,UAAA2F,OAAA2B,OAAAW,GAAA,SAAAK,EAAAtI,GAAA,0BAAA/F,SAAA,SAAAsJ,GAAAkD,EAAAzG,EAAAuD,GAAA,SAAAqE,GAAA,YAAAW,QAAAhF,EAAAqE,EAAA,gBAAAY,EAAAnB,EAAAoB,GAAA,SAAAC,EAAAnF,EAAAqE,EAAAe,EAAAnE,GAAA,IAAAoE,EAAAlB,EAAAL,EAAA9D,GAAA8D,EAAAO,GAAA,aAAAgB,EAAAf,KAAA,KAAAgB,EAAAD,EAAAhB,IAAAxM,EAAAyN,EAAAzN,MAAA,OAAAA,GAAA,UAAA0N,GAAA1N,IAAAwK,EAAA3G,KAAA7D,EAAA,WAAAqN,EAAAE,QAAAvN,EAAA2N,SAAA5F,MAAA,SAAA/H,GAAAsN,EAAA,OAAAtN,EAAAuN,EAAAnE,EAAA,aAAAqC,GAAA6B,EAAA,QAAA7B,EAAA8B,EAAAnE,EAAA,IAAAiE,EAAAE,QAAAvN,GAAA+H,MAAA,SAAA6F,GAAAH,EAAAzN,MAAA4N,EAAAL,EAAAE,EAAA,aAAAI,GAAA,OAAAP,EAAA,QAAAO,EAAAN,EAAAnE,EAAA,IAAAA,EAAAoE,EAAAhB,IAAA,KAAAsB,EAAApD,EAAA,gBAAA1K,MAAA,SAAAmI,EAAAqE,GAAA,SAAAuB,IAAA,WAAAV,GAAA,SAAAE,EAAAnE,GAAAkE,EAAAnF,EAAAqE,EAAAe,EAAAnE,EAAA,WAAA0E,EAAAA,EAAAA,EAAA/F,KAAAgG,EAAAA,GAAAA,GAAA,aAAA1B,EAAAV,EAAAE,EAAAM,GAAA,IAAA6B,EAAA,iCAAA7F,EAAAqE,GAAA,iBAAAwB,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAA7F,EAAA,MAAAqE,EAAA,OAAAxM,WAAAkO,EAAAC,MAAA,OAAAhC,EAAAhE,OAAAA,EAAAgE,EAAAK,IAAAA,IAAA,KAAA4B,EAAAjC,EAAAiC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAjC,GAAA,GAAAkC,EAAA,IAAAA,IAAA3B,EAAA,gBAAA2B,CAAA,cAAAlC,EAAAhE,OAAAgE,EAAAoC,KAAApC,EAAAqC,MAAArC,EAAAK,SAAA,aAAAL,EAAAhE,OAAA,uBAAA6F,EAAA,MAAAA,EAAA,YAAA7B,EAAAK,IAAAL,EAAAsC,kBAAAtC,EAAAK,IAAA,gBAAAL,EAAAhE,QAAAgE,EAAAuC,OAAA,SAAAvC,EAAAK,KAAAwB,EAAA,gBAAAR,EAAAlB,EAAAX,EAAAE,EAAAM,GAAA,cAAAqB,EAAAf,KAAA,IAAAuB,EAAA7B,EAAAgC,KAAA,6BAAAX,EAAAhB,MAAAE,EAAA,gBAAA1M,MAAAwN,EAAAhB,IAAA2B,KAAAhC,EAAAgC,KAAA,WAAAX,EAAAf,OAAAuB,EAAA,YAAA7B,EAAAhE,OAAA,QAAAgE,EAAAK,IAAAgB,EAAAhB,IAAA,YAAA8B,EAAAF,EAAAjC,GAAA,IAAAwC,EAAAxC,EAAAhE,OAAAA,EAAAiG,EAAApD,SAAA2D,GAAA,QAAAT,IAAA/F,EAAA,OAAAgE,EAAAiC,SAAA,eAAAO,GAAAP,EAAApD,SAAA4D,SAAAzC,EAAAhE,OAAA,SAAAgE,EAAAK,SAAA0B,EAAAI,EAAAF,EAAAjC,GAAA,UAAAA,EAAAhE,SAAA,WAAAwG,IAAAxC,EAAAhE,OAAA,QAAAgE,EAAAK,IAAA,IAAAqC,UAAA,oCAAAF,EAAA,aAAAjC,EAAA,IAAAc,EAAAlB,EAAAnE,EAAAiG,EAAApD,SAAAmB,EAAAK,KAAA,aAAAgB,EAAAf,KAAA,OAAAN,EAAAhE,OAAA,QAAAgE,EAAAK,IAAAgB,EAAAhB,IAAAL,EAAAiC,SAAA,KAAA1B,EAAA,IAAAoC,EAAAtB,EAAAhB,IAAA,OAAAsC,EAAAA,EAAAX,MAAAhC,EAAAiC,EAAAW,YAAAD,EAAA9O,MAAAmM,EAAA6C,KAAAZ,EAAAa,QAAA,WAAA9C,EAAAhE,SAAAgE,EAAAhE,OAAA,OAAAgE,EAAAK,SAAA0B,GAAA/B,EAAAiC,SAAA,KAAA1B,GAAAoC,GAAA3C,EAAAhE,OAAA,QAAAgE,EAAAK,IAAA,IAAAqC,UAAA,oCAAA1C,EAAAiC,SAAA,KAAA1B,EAAA,UAAAwC,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAC,KAAAN,EAAA,UAAAO,EAAAP,GAAA,IAAA5B,EAAA4B,EAAAQ,YAAA,GAAApC,EAAAf,KAAA,gBAAAe,EAAAhB,IAAA4C,EAAAQ,WAAApC,CAAA,UAAApB,EAAAN,GAAA,KAAA2D,WAAA,EAAAJ,OAAA,SAAAvD,EAAAjN,QAAAqQ,EAAA,WAAAlK,OAAA,YAAAlB,EAAA+L,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAA9E,GAAA,GAAA+E,EAAA,OAAAA,EAAAjM,KAAAgM,GAAA,sBAAAA,EAAAb,KAAA,OAAAa,EAAA,IAAAE,MAAAF,EAAA5P,QAAA,KAAA+D,GAAA,EAAAgL,EAAA,SAAAA,IAAA,OAAAhL,EAAA6L,EAAA5P,QAAA,GAAAuK,EAAA3G,KAAAgM,EAAA7L,GAAA,OAAAgL,EAAAhP,MAAA6P,EAAA7L,GAAAgL,EAAAb,MAAA,EAAAa,EAAA,OAAAA,EAAAhP,WAAAkO,EAAAc,EAAAb,MAAA,EAAAa,CAAA,SAAAA,EAAAA,KAAAA,CAAA,SAAAA,KAAAgB,EAAA,UAAAA,IAAA,OAAAhQ,WAAAkO,EAAAC,MAAA,UAAAxB,EAAA/H,UAAAgI,EAAAlC,EAAAuC,EAAA,eAAAjN,MAAA4M,EAAArB,cAAA,IAAAb,EAAAkC,EAAA,eAAA5M,MAAA2M,EAAApB,cAAA,IAAAoB,EAAAsD,YAAA5E,EAAAuB,EAAAzB,EAAA,qBAAAd,EAAA6F,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,GAAAA,EAAAE,YAAA,QAAAD,IAAAA,IAAAzD,GAAA,uBAAAyD,EAAAH,aAAAG,EAAAzJ,MAAA,EAAA0D,EAAAiG,KAAA,SAAAH,GAAA,OAAA5F,OAAAgG,eAAAhG,OAAAgG,eAAAJ,EAAAvD,IAAAuD,EAAAK,UAAA5D,EAAAvB,EAAA8E,EAAAhF,EAAA,sBAAAgF,EAAAvL,UAAA2F,OAAA2B,OAAAe,GAAAkD,CAAA,EAAA9F,EAAAoG,MAAA,SAAAjE,GAAA,OAAAmB,QAAAnB,EAAA,EAAAU,EAAAE,EAAAxI,WAAAyG,EAAA+B,EAAAxI,UAAAqG,GAAA,0BAAAZ,EAAA+C,cAAAA,EAAA/C,EAAAqG,MAAA,SAAA/E,EAAAC,EAAAC,EAAAC,EAAAuB,QAAA,IAAAA,IAAAA,EAAAlE,SAAA,IAAAwH,EAAA,IAAAvD,EAAA1B,EAAAC,EAAAC,EAAAC,EAAAC,GAAAuB,GAAA,OAAAhD,EAAA6F,oBAAAtE,GAAA+E,EAAAA,EAAA3B,OAAAjH,MAAA,SAAA0F,GAAA,OAAAA,EAAAU,KAAAV,EAAAzN,MAAA2Q,EAAA3B,MAAA,KAAA9B,EAAAD,GAAA5B,EAAA4B,EAAA9B,EAAA,aAAAE,EAAA4B,EAAAlC,GAAA,0BAAAM,EAAA4B,EAAA,qDAAA5C,EAAAuG,KAAA,SAAAC,GAAA,IAAAC,EAAAvG,OAAAsG,GAAAD,EAAA,WAAA7Q,KAAA+Q,EAAAF,EAAAlB,KAAA3P,GAAA,OAAA6Q,EAAAG,UAAA,SAAA/B,IAAA,KAAA4B,EAAA3Q,QAAA,KAAAF,EAAA6Q,EAAAI,MAAA,GAAAjR,KAAA+Q,EAAA,OAAA9B,EAAAhP,MAAAD,EAAAiP,EAAAb,MAAA,EAAAa,CAAA,QAAAA,EAAAb,MAAA,EAAAa,CAAA,GAAA3E,EAAAvG,OAAAA,EAAAsI,EAAAxH,UAAA,CAAAyL,YAAAjE,EAAApH,MAAA,SAAAiM,GAAA,QAAAC,KAAA,OAAAlC,KAAA,OAAAT,KAAA,KAAAC,WAAAN,EAAA,KAAAC,MAAA,OAAAC,SAAA,UAAAjG,OAAA,YAAAqE,SAAA0B,EAAA,KAAAuB,WAAA5Q,QAAA8Q,IAAAsB,EAAA,QAAAtK,KAAA,WAAAA,EAAAwK,OAAA,IAAA3G,EAAA3G,KAAA,KAAA8C,KAAAoJ,OAAApJ,EAAAyK,MAAA,WAAAzK,QAAAuH,EAAA,EAAAmD,KAAA,gBAAAlD,MAAA,MAAAmD,EAAA,KAAA7B,WAAA,GAAAG,WAAA,aAAA0B,EAAA7E,KAAA,MAAA6E,EAAA9E,IAAA,YAAA+E,IAAA,EAAA9C,kBAAA,SAAA+C,GAAA,QAAArD,KAAA,MAAAqD,EAAA,IAAArF,EAAA,cAAAsF,EAAAC,EAAAC,GAAA,OAAAnE,EAAAf,KAAA,QAAAe,EAAAhB,IAAAgF,EAAArF,EAAA6C,KAAA0C,EAAAC,IAAAxF,EAAAhE,OAAA,OAAAgE,EAAAK,SAAA0B,KAAAyD,CAAA,SAAA3N,EAAA,KAAAyL,WAAAxP,OAAA,EAAA+D,GAAA,IAAAA,EAAA,KAAAoL,EAAA,KAAAK,WAAAzL,GAAAwJ,EAAA4B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAoC,EAAA,UAAArC,EAAAC,QAAA,KAAA6B,KAAA,KAAAU,EAAApH,EAAA3G,KAAAuL,EAAA,YAAAyC,EAAArH,EAAA3G,KAAAuL,EAAA,iBAAAwC,GAAAC,EAAA,SAAAX,KAAA9B,EAAAE,SAAA,OAAAmC,EAAArC,EAAAE,UAAA,WAAA4B,KAAA9B,EAAAG,WAAA,OAAAkC,EAAArC,EAAAG,WAAA,SAAAqC,GAAA,QAAAV,KAAA9B,EAAAE,SAAA,OAAAmC,EAAArC,EAAAE,UAAA,YAAAuC,EAAA,UAAA5D,MAAA,kDAAAiD,KAAA9B,EAAAG,WAAA,OAAAkC,EAAArC,EAAAG,WAAA,KAAAb,OAAA,SAAAjC,EAAAD,GAAA,QAAAxI,EAAA,KAAAyL,WAAAxP,OAAA,EAAA+D,GAAA,IAAAA,EAAA,KAAAoL,EAAA,KAAAK,WAAAzL,GAAA,GAAAoL,EAAAC,QAAA,KAAA6B,MAAA1G,EAAA3G,KAAAuL,EAAA,oBAAA8B,KAAA9B,EAAAG,WAAA,KAAAuC,EAAA1C,EAAA,OAAA0C,IAAA,UAAArF,GAAA,aAAAA,IAAAqF,EAAAzC,QAAA7C,GAAAA,GAAAsF,EAAAvC,aAAAuC,EAAA,UAAAtE,EAAAsE,EAAAA,EAAAlC,WAAA,UAAApC,EAAAf,KAAAA,EAAAe,EAAAhB,IAAAA,EAAAsF,GAAA,KAAA3J,OAAA,YAAA6G,KAAA8C,EAAAvC,WAAA7C,GAAA,KAAAqF,SAAAvE,EAAA,EAAAuE,SAAA,SAAAvE,EAAAgC,GAAA,aAAAhC,EAAAf,KAAA,MAAAe,EAAAhB,IAAA,gBAAAgB,EAAAf,MAAA,aAAAe,EAAAf,KAAA,KAAAuC,KAAAxB,EAAAhB,IAAA,WAAAgB,EAAAf,MAAA,KAAA8E,KAAA,KAAA/E,IAAAgB,EAAAhB,IAAA,KAAArE,OAAA,cAAA6G,KAAA,kBAAAxB,EAAAf,MAAA+C,IAAA,KAAAR,KAAAQ,GAAA9C,CAAA,EAAAsF,OAAA,SAAAzC,GAAA,QAAAvL,EAAA,KAAAyL,WAAAxP,OAAA,EAAA+D,GAAA,IAAAA,EAAA,KAAAoL,EAAA,KAAAK,WAAAzL,GAAA,GAAAoL,EAAAG,aAAAA,EAAA,YAAAwC,SAAA3C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA1C,CAAA,GAAAuF,MAAA,SAAA5C,GAAA,QAAArL,EAAA,KAAAyL,WAAAxP,OAAA,EAAA+D,GAAA,IAAAA,EAAA,KAAAoL,EAAA,KAAAK,WAAAzL,GAAA,GAAAoL,EAAAC,SAAAA,EAAA,KAAA7B,EAAA4B,EAAAQ,WAAA,aAAApC,EAAAf,KAAA,KAAAyF,EAAA1E,EAAAhB,IAAAmD,EAAAP,EAAA,QAAA8C,CAAA,YAAAjE,MAAA,0BAAAkE,cAAA,SAAAtC,EAAAd,EAAAE,GAAA,YAAAb,SAAA,CAAApD,SAAAlH,EAAA+L,GAAAd,WAAAA,EAAAE,QAAAA,GAAA,cAAA9G,SAAA,KAAAqE,SAAA0B,GAAAxB,CAAA,GAAArC,CAAA,UAAA+H,GAAAC,EAAA9E,EAAAnE,EAAAkJ,EAAAC,EAAAxS,EAAAyM,GAAA,QAAAsC,EAAAuD,EAAAtS,GAAAyM,GAAAxM,EAAA8O,EAAA9O,KAAA,OAAA6N,GAAA,YAAAzE,EAAAyE,EAAA,CAAAiB,EAAAX,KAAAZ,EAAAvN,GAAAmJ,QAAAoE,QAAAvN,GAAA+H,KAAAuK,EAAAC,EAAA,UAAAC,GAAAjG,GAAA,sBAAAV,EAAA,KAAA4G,EAAAC,UAAA,WAAAvJ,SAAA,SAAAoE,EAAAnE,GAAA,IAAAiJ,EAAA9F,EAAAoG,MAAA9G,EAAA4G,GAAA,SAAAH,EAAAtS,GAAAoS,GAAAC,EAAA9E,EAAAnE,EAAAkJ,EAAAC,EAAA,OAAAvS,EAAA,UAAAuS,EAAA9G,GAAA2G,GAAAC,EAAA9E,EAAAnE,EAAAkJ,EAAAC,EAAA,QAAA9G,EAAA,CAAA6G,OAAApE,EAAA,KAmCA,SAAS0E,GAAUpO,GACjB,IAAMqO,EAAa,IAAIxX,EAbzB,SAAqCmJ,GACnC,MAAO,CACL5I,OAAQsO,GACRzO,UAAW+I,EAAKmC,KAChBjL,YAAa8I,EAAKkE,KAClB/M,MAAO6I,EAAK7I,MACZE,QAAS2I,EAAKsO,MAAM/T,IACpBjD,KAAMA,EAEV,CAKIiX,CAA4BvO,GAC5B,CACEzI,gBAAiB,kBAAMiX,GAAejQ,KAAMyB,EAAKkE,KAAMlE,EAAKmC,KAAM,EAClE1K,gBAAiB,kBAAMgX,GAAIC,QAAS1O,EAAKzF,IAAK,EAC9C7C,qBAAsB,kBAAM+W,GAAIE,WAAY3O,EAAKzF,IAAK,EACtD5C,gBAAiB,WACf0W,EAAWO,8BACRrL,MAAM,SAAAvD,GACLqO,EAAWzU,cAAeoG,EAAK7I,OAC/BkX,EAAW7T,cACb,IACCiT,OAAO,SAAAxG,GAAG,OAAI4H,MAAOzJ,EAAS6B,EAAK,IACnC6H,QAAST,EAAW1V,oBACzB,EAEAnB,cAAe,kBAAMuX,GAAuBxQ,KAAIyP,GAAApI,KAAAkG,MAAE,SAAAkD,IAAA,OAAApJ,KAAAsB,MAAA,SAAA+H,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAzE,MAAA,cAAAyE,EAAAvC,KAAA,EAAAuC,EAAAzE,KAAA,EAExCiE,GAAIS,WAAWlP,EAAKzF,KAAI,OAC9B8T,EAAWa,aACXH,GAAuBvQ,QAAQyQ,EAAAzE,KAAA,gBAAAyE,EAAAvC,KAAA,EAAAuC,EAAAE,GAAAF,EAAA,SAE/BJ,MAAMzJ,EAAM6J,EAAAE,IAAQ,yBAAAF,EAAApC,OAAA,GAAAmC,EAAA,kBAEtB,IAGAI,EAAUf,EAAWgB,eAC3BC,GAAMC,QAASH,EACjB,CAEA,IA+BML,GAAyB,IAAIjK,ECnBK,CACtC9F,YAAaA,EACbjB,cAAe,4BACfkB,SAAU,oBACVC,kBAAmBmG,EACnBlG,wBAAyB,gBDerBqP,GAAiB,IAAI/N,EAAgB6E,IACrCkK,GAAW,IAAIlO,ECxDS,CAC5BC,0BAA2B,uBAC3BC,2BAA4B,qBAC5BC,mBAAoB,qBDsDhBgN,GAAM,IAAIlM,EChCS,CACvBC,MAAO,uCACPlL,KAAM,2BACNmL,UAAW,+CACXC,SAAU,WACVC,OAAQ,SACRC,OAAQ,UACRC,QAAS,YD0BLyM,GAAQ,IAAIvO,EAASqN,GCjGE,gBDmGvBqB,GAAmB,IAAI9Q,EAAe6G,IArCL,SAAJzO,GAAiC,IAA1B2K,EAAQ3K,EAAR2K,SAAUE,EAAS7K,EAAT6K,UAClD6M,GAAIiB,eAAgBhO,EAAUE,GAC3B2B,MAAM,WACLiM,GAAStN,YAAaR,EAAUE,GAChC6N,GAAiBjR,OACnB,IACCiP,OAAO,SAAAxG,GAAG,OAAI4H,MAAOzJ,EAAS6B,EAAK,IACnC6H,QAASW,GAAiBnP,oBAC/B,IA8BMqP,GAAe,IAAIhR,EAAe4G,IA5BN,SAAHqK,GAAgC,IAA1B7L,EAAS6L,EAAT7L,UAAW8L,EAAQD,EAARC,SAC5CpB,GAAIqB,WAAY/L,EAAW8L,GACxBtM,MAAM,SAAAvD,GACLoO,GAAUpO,GACV2P,GAAanR,OACf,IACCiP,OAAO,SAAAxG,GAAG,OAAI4H,MAAO,iCAAmC5H,EAAK,IAC7D6H,QAASW,GAAiBnP,oBACjC,IAqBMyP,GAAkB,IAAIpR,EAAegH,IAnBN,SAAHqK,GAAuB,IAAhBH,EAAQG,EAARH,SACvCpB,GAAIwB,aAAcJ,GACftM,MAAM,SAAAvD,GACLwP,GAASnN,UAAWrC,EAAKsC,QACzByN,GAAgBvR,OAClB,IACCiP,OAAO,SAAAxG,GAAG,OAAI4H,MAAO,iCAAmC5H,EAAK,IAC7D6H,QAASW,GAAiBnP,oBAC/B,IAcAqE,QAAQuL,IAAI,CACVzB,GAAI0B,wBACJ1B,GAAI2B,oBAEH7M,MAAM,SAAA8M,GAA0B,IAAAC,EAAAC,GAAAF,EAAA,GAAvBG,EAAOF,EAAA,GAAEG,EAAOH,EAAA,GACxBd,GAASkB,mBAAoBF,GAC7BlZ,EAAOkZ,EAAQjW,IACf+U,GAAMqB,YAAaF,EACrB,IACChD,OAAO,SAAAmD,GAAA,IAAAC,EAAAN,GAAAK,EAAA,GAAGE,EAAMD,EAAA,GAAEE,EAAMF,EAAA,UAAOhC,MAAOiC,EAAQC,EAAQ,IAEzDvC,GAAewC,oBACfrB,GAAaqB,oBACbvB,GAAiBuB,oBACjBjC,GAAuBiC,oBACvBjB,GAAgBiB,oBAMhBnV,MAAMC,KAAMhE,SAASgI,OAAQzF,SAAS,SAAAsB,GACf,IAAID,EAAgB+J,GAAgB9J,GAC5CsV,kBACf,IAEA9L,EAAcrM,iBAAkB,QAASiX,GAAgBxR,MACzD2G,EAAYpM,iBAAkB,QAAS6W,GAAapR,MACpD0G,EAAenM,iBAAkB,SAAS,WACxC2W,GAAiByB,eAAgB1B,GAAS2B,eAC1C1B,GAAiBlR,MACnB,IAGA6S,YAAY,kBAAMtZ,SAASC,cAAe,YAAaM,UAAUiB,OAAQ,UAAW,GAAE","sources":["webpack://mesto/./src/components/Card.js","webpack://mesto/./src/components/FormValidator.js","webpack://mesto/./src/components/Popup.js","webpack://mesto/./src/components/PopupWithForm.js","webpack://mesto/./src/components/PopupWithImage.js","webpack://mesto/./src/components/Section.js","webpack://mesto/./src/components/UserInfo.js","webpack://mesto/./src/components/Api.js","webpack://mesto/./src/components/PopupCardDelete.js","webpack://mesto/./src/pages/index.js","webpack://mesto/./src/utils/constants.js"],"sourcesContent":["/**\r\n * Класс, представляющий карточку места\r\n */\r\nexport default class Card {\r\n   /**\r\n   * Создает экземпляр карточки места\r\n   *\r\n   * @constructor\r\n   * @param {string} placeName - название места\r\n   * @param {string} placeImgSrc - URL-адрес изображения места\r\n   * @param {Array} likes - массив объектов, каждый из которых содержит информацию о пользователе поставившем лайк данной карточке\r\n   * @param {object} config - словарик всех необходимых селекторов\r\n   * @param {string} ownerId - id владельца карточки\r\n   * @param {string} myId - id текущего пользователя\r\n   * \r\n   * @param {function} handeCardClick - callback клика по картинке\r\n   * @param {function} confirmDelete - подтвердить удаление карточки\r\n   * @param {function} setLikeOnServer - отправляет на сервер запрос об установке лайка\r\n   * @param {function} deleteLikeFromServer - отправляет на сервер запрос о снятии лайка \r\n   */\r\n  // Примечание: очень громоздкий конструктор\r\n  constructor(\r\n    { placeName, placeImgSrc, likes, config, ownerId, myId },\r\n    { handleCardClick, confirmDelete, setLikeOnServer, \r\n      deleteLikeFromServer, handleLikeClick }\r\n  ) {\r\n    this._placeName = placeName;\r\n    this._placeImgSrc = placeImgSrc; \r\n    this._likes = likes;\r\n    this._ownerCardId = ownerId;\r\n    this._myId = myId;\r\n\r\n    this._handeCardClick = handleCardClick;\r\n    this._confirmDelete = confirmDelete;\r\n    this._setLikeOnServer = setLikeOnServer;\r\n    this._deleteLikeFromServer = deleteLikeFromServer;\r\n    this._handleLikeClick = handleLikeClick;\r\n\r\n    this._templateSelector = config.templateSelector;\r\n    this._placesItemSelector = config.cardSelector;\r\n    this._classLikeActive = config.classLikeActive;\r\n    this._btnDellHiddenClass = config.btnDellHiddenClass;\r\n\r\n    this._placeElement = this._getPlaceElement();\r\n    this._img = this._placeElement.querySelector( config.imgSelector );\r\n    this._imgTitle = this._placeElement.querySelector( config.titleSelector );\r\n    this._imgLike = this._placeElement.querySelector( config.likeSelector );\r\n    this._btnPlaceDel = this._placeElement.querySelector( config.btnDelSelector );\r\n    this._countLikeContainer = this._placeElement.querySelector( config.countLikeSelector );\r\n\r\n    this._isLikeInProcess = false; // флаг для корректной обработки дабл-клика по лайку\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @returns {Node} html код из шаблона для карточки\r\n   */\r\n  _getPlaceElement = () => {\r\n    return document\r\n      .querySelector( this._templateSelector )\r\n      .content\r\n      .querySelector( this._placesItemSelector )\r\n      .cloneNode( true );\r\n  } \r\n\r\n  /**\r\n   * В зависимости от наличия или отсутсвия активного состояния лайка \r\n   * отправляет запрос установки или снятия лайка на сервер\r\n   * @returns response об операции\r\n   */\r\n  toggleLikeConditionOnserver = () => {\r\n    return this._imgLike.classList.contains( this._classLikeActive ) \r\n      ? this._deleteLikeFromServer()\r\n      : this._setLikeOnServer()\r\n  }\r\n\r\n  /**\r\n   * Блокирует клики по лайку до окончания обработки первого.\r\n   * Обрабатывает response сервера.\r\n   */\r\n  _toggleLikeCondition = () => {\r\n    if ( !this._isLikeInProcess ) {\r\n      this.toggleflagCondition();\r\n      this._handleLikeClick();\r\n    }\r\n  }\r\n\r\n  _setEventListeners = () => {\r\n    this._img.addEventListener( 'click', () => {\r\n      this._handeCardClick( this._placeImgSrc, this._placeName )\r\n    } );\r\n    this._imgLike.addEventListener( 'mousedown', this._toggleLikeCondition );\r\n    this._btnPlaceDel.addEventListener( 'click', this._confirmDelete );\r\n  }\r\n\r\n  /**\r\n   * Метод удаляет карточку и обнуляет ссылку на ячейку памяти\r\n   */\r\n  deleteCard = () => {\r\n    this._placeElement.remove();\r\n    this._placeElement = null;\r\n  };\r\n\r\n  _fillCard = () => {\r\n    this._img.src = this._placeImgSrc;\r\n    this._img.alt += ` ${ this._placeName }`; \r\n    this._imgTitle.textContent = this._placeName;\r\n    this.setCountLikes( this._likes );\r\n    this._checkOwner();\r\n    this._checkMyLike();\r\n  }\r\n\r\n  /**\r\n   * Проверяет является ли карточка моей.\r\n   * Скрывает кнопку удаления в противном случае\r\n   */\r\n  _checkOwner = () => {\r\n    if ( this._ownerCardId === this._myId ) {\r\n      this._btnPlaceDel.classList.add( this._btnDellHiddenClass );\r\n    }\r\n  }\r\n\r\n  doLikeActive = () => {\r\n    this._imgLike.classList.toggle( this._classLikeActive );\r\n  }\r\n\r\n  setCountLikes( likes ){\r\n    this._countLikeContainer.textContent = likes.length;\r\n  }\r\n\r\n  toggleflagCondition = () => {\r\n    this._isLikeInProcess \r\n      ? this._isLikeInProcess = false\r\n      : this._isLikeInProcess = true;\r\n  }\r\n\r\n  // setBtnSubmitText\r\n  // popupEditAvatar._btnSubmit.textContent = popupEditAvatar._btnSubmitOriginalText\r\n\r\n  /**\r\n   * Проверяет есть ли среди лайков карточки мой и рендерит его\r\n   */\r\n  _checkMyLike = () => {\r\n    this._likes.forEach( element => {\r\n      if ( element._id === this._myId ) {\r\n        this.doLikeActive();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Возвращает заполненный HTML-элемент карточки места.\r\n   *\r\n   * @method\r\n   * @returns {Node} HTML-элемент карточки места.\r\n   */\r\n  getPlaceCard = () => {\r\n    this._fillCard();\r\n    this._setEventListeners();\r\n\r\n    return this._placeElement;\r\n  }\r\n}","/**\r\n * Класс, представляющий валидацию формы\r\n */\r\nexport default class FormValidator {\r\n  /**\r\n   * Создать экземпляр формы под валидацию\r\n   * @constructor\r\n   * @param {Object} config - необходимые селекторы\r\n   * @param {Node} form - форма\r\n   */\r\n  constructor( config, form ) {\r\n    this._inputUnvalidateClass = config.inputUnvalidateClass;\r\n    this._form = form;\r\n    this._inputList = this._getFormElements( form, config.inputSelector );\r\n    this._errorList = this._getFormElements( form, config.errorSelector );\r\n    this._btnSubmit = form.querySelector( config.submitBtnSelector );\r\n  }\r\n\r\n  _getFormElements = ( form, formSelector ) => {\r\n    return Array.from( form.querySelectorAll( formSelector ) );\r\n  }\r\n\r\n  _hasInvalidInput = () => {\r\n    return this._inputList.some( input => !this._checkValidity( input ));\r\n  }\r\n\r\n  _showInputError = ( textError, errorElement, inputElement ) => {\r\n    inputElement.classList.add( this._inputUnvalidateClass );\r\n    errorElement.textContent = textError;\r\n  }\r\n\r\n  _hideInputError = ( errorElement, inputElement ) => {\r\n    inputElement.classList.remove( this._inputUnvalidateClass );\r\n    errorElement.textContent = '';\r\n  } \r\n\r\n  _checkInputValidity = ( inputElement, errorElement ) => {\r\n    this._checkValidity( inputElement )\r\n      ? this._hideInputError ( errorElement, inputElement ) \r\n      : this._showInputError (\r\n          inputElement.validationMessage, \r\n          errorElement, \r\n          inputElement\r\n        );\r\n  }\r\n\r\n  _checkValidity( item ) {\r\n    return item.validity.valid;\r\n  }\r\n\r\n  _toggleButtonState = () => {\r\n    this._hasInvalidInput() ?\r\n      this._btnSubmit.setAttribute( 'disabled', true ):\r\n      this._btnSubmit.removeAttribute( 'disabled' );\r\n  }\r\n\r\n  // Примечание: если не использовать preventDefault, очищать инпуты не потребуется,\r\n  // но потребуется setTimeout (сначала reset, затем toggleButtonState)\r\n  // иначе reset выполнится после вложенного кода аналогично submit\r\n  _setEventListeners = () => {\r\n    this._form.addEventListener( 'reset', ev => {\r\n      ev.preventDefault();\r\n      this._inputList.forEach( ( inputElement, index ) => {\r\n        inputElement.value = '';\r\n        this._hideInputError( this._errorList[ index ], inputElement );\r\n      });\r\n      this._toggleButtonState();\r\n    })\r\n\r\n    this._inputList.forEach( ( inputElement, index ) => {\r\n      inputElement.addEventListener( 'input', () => {\r\n        this._checkInputValidity( inputElement, this._errorList[index] );\r\n        this._toggleButtonState();\r\n      });\r\n    })\r\n  } \r\n\r\n  /**\r\n   * Включить валидацию переданной формы\r\n   */\r\n  enableValidation = () => {\r\n    this._setEventListeners();\r\n  };\r\n}","/**\r\n * класс описывает общий функционал всех popup-окон\r\n */\r\nexport default class Popup {\r\n  /**\r\n   * @constructor\r\n   * @param {string} classBtnClose\r\n   * @param {string} classPopupOpened\r\n   * @param {string} popupSelector\r\n   */\r\n  constructor( { classBtnClose, classPopupOpened }, popupSelector ) {\r\n    this._classPopupOpened = classPopupOpened;\r\n    this._classBtnClose = classBtnClose;\r\n    this._popup = document.querySelector( popupSelector );\r\n    this._handleEscClose = this._handleEscClose.bind( this );\r\n    this.open = this.open.bind( this );\r\n  }\r\n\r\n  /**\r\n   * Открыть попап\r\n   * повесить слушатель-закрывашку по клику на esc\r\n   * @param {HTMLElement} popupElement\r\n   */\r\n  open() {\r\n    this._popup.classList.add( this._classPopupOpened );\r\n    document.addEventListener( 'keydown', this._handleEscClose );\r\n  }\r\n\r\n  _handleEscClose( ev ) {\r\n    if ( ev.key === 'Escape' ) { this.close(); }\r\n  }\r\n\r\n  /**\r\n   * Закрыть попап и снять слушатель-закрывашку\r\n   */\r\n  close() {\r\n    this._popup.classList.remove( this._classPopupOpened );\r\n    document.removeEventListener( 'keydown', this._handleEscClose );\r\n  }\r\n\r\n  /**\r\n   * Установка слушателей закрывашек \r\n   * по клику на крестик и оверлей\r\n   */\r\n  setEventListeners() {\r\n    this._popup.addEventListener( 'mousedown', ev => {\r\n      if (ev.target.classList.contains( this._classPopupOpened ) || \r\n          ev.target.classList.contains( this._classBtnClose )) {\r\n        this.close();\r\n      } \r\n    } );\r\n  }\r\n}","import Popup from \"./Popup.js\";\r\n\r\n/**\r\n * класс описывает дополнительный функционал для popup с картинкой карточки\r\n */\r\nexport default class PopupWithForm extends Popup {\r\n  /**\r\n   * @constructor\r\n   * @param {object} popupConfig - классы передаваемые в Popup\r\n   * @param {string} inputSelector - класс, по которому можно найти input-элементы\r\n   * @param {string} popupSelector - класс рабочего popup-окна\r\n   * @param {string} nameForm - атрибут name html элемента формы внутри рабочего popup-окна\r\n   * @param {string} btnSubmitSelector - класс кнопки формы ответственной за submit\r\n   * @param {string} btnSubmitFetchCondition - текст, который должен отобразиться внутри кнопки на время fetch-запроса\r\n   * @param {Function} callbackSubmit - обработчик submit события\r\n   */\r\n  constructor ({ \r\n    popupConfig, inputSelector, popupSelector, nameForm, \r\n    btnSubmitSelector, btnSubmitFetchCondition\r\n  }, callbackSubmit ) {\r\n\r\n    super( popupConfig, popupSelector );\r\n    this._callbackSubmit = callbackSubmit;\r\n    this._classInput = inputSelector;\r\n    this._btnSubmitFetchCondition = btnSubmitFetchCondition;\r\n    \r\n    this._form = document.forms[nameForm];\r\n    this._inputs = Array.from( \r\n      this._form.querySelectorAll( this._classInput )\r\n    );\r\n    this._btnSubmit = this._form.querySelector( btnSubmitSelector );\r\n    this._btnSubmitOriginalText = this._btnSubmit.textContent;\r\n  }\r\n\r\n  /**\r\n   * устанавливает в input-элементы указанные значения\r\n   * @param {Array} values - массив значений для input-элементов \r\n   */\r\n  // Примечание: слабым местом такой реализации выступает соответствие ключа и значения атрибута\r\n  // Значение ключа же задаётся в классе UserInfo, который ничего не знает о PopupWithForm\r\n  setInputValues = ( values ) => {\r\n    this._inputs.forEach( ( input, i ) =>\r\n      input.value = values[ input.getAttribute( 'name' ) ]\r\n    );\r\n  }\r\n\r\n  // Примечание: такая реализация не работает\r\n  // _getInputValues() {\r\n  //   return this._inputs.reduce((data, input) => \r\n  //     data[input.getAttribute('name')] = input.value, \r\n  //     {}\r\n  //   );\r\n  // }\r\n  _getInputValues() {\r\n    return this._inputs.reduce((data, input) => {\r\n      data[input.getAttribute('name')] = input.value;\r\n      return data;\r\n    }, {});\r\n  }\r\n\r\n  /**\r\n   * устанавливает слушатели закрывашки, а также submit - события для текущего popup-окна\r\n   */\r\n  setEventListeners() {\r\n    super.setEventListeners();\r\n    this._form.addEventListener( 'submit', (ev) => {\r\n      ev.preventDefault();\r\n      this._fetchCondition();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Улучшает UX опыт - изменяет надпись кнопки-submit на время fetch-запроса.\r\n   * После возвращает её текст к исходному состоянию\r\n   */\r\n  _fetchCondition() {\r\n    this.toggleBtnSubmitText();\r\n    this._callbackSubmit( this._getInputValues() );\r\n  }\r\n\r\n  toggleBtnSubmitText = () => {\r\n    this._btnSubmit.textContent === this._btnSubmitOriginalText\r\n      ? this._btnSubmit.textContent = this._btnSubmitFetchCondition\r\n      : this._btnSubmit.textContent = this._btnSubmitOriginalText;\r\n  }\r\n\r\n  /**\r\n   * закрывает текущий popup, предварительно очищая форму\r\n   */\r\n  close() {\r\n    this._form.reset(); // сначала стереть\r\n    super.close();\r\n  }\r\n\r\n  /**\r\n   * открывает текущий popup, предварительно устанавливая корректное состояние кнопки\r\n   */\r\n  open() {\r\n    super.open();\r\n  }\r\n}","import Popup from \"./Popup.js\";\r\n/**\r\n * класс наследуемый от Popup. Работает с модальным окном full image\r\n */\r\nexport default class PopupWithImage extends Popup {\r\n  /**\r\n   * @constructor\r\n   * @param {object} popupConfig - классы передаваемые в Popup\r\n   * @param {string} popupSelector - класс рабочего popup-окна\r\n   * @param {string} figureSelector - селектор элемента с картинкой и подписью\r\n   * @param {string} imgSelector - селектор картинки внутри фигуры\r\n   * @param {string} figcaptionSelector - селектор подписи внутри фигуры\r\n   */\r\n  constructor( { \r\n    popupConfig,\r\n    popupSelector,\r\n    figureSelector, \r\n    imgSelector,\r\n    figcaptionSelector  \r\n  } ) {\r\n    \r\n    super( popupConfig, popupSelector );\r\n    this._figure = document.querySelector( figureSelector );\r\n    this._figureImg = this._figure.querySelector( imgSelector );\r\n    this._figcaption = this._figure.querySelector( figcaptionSelector );\r\n  }\r\n\r\n  /**\r\n   * открывает модальное окно с изображением карточки\r\n   * @param {URL} placeImgSrc - url к картинке\r\n   * @param {string} placeName - название к карточке\r\n   */\r\n  open( placeImgSrc, placeName ) {\r\n    this._figureImg.src = placeImgSrc;\r\n    this._figureImg.alt = placeName;\r\n    this._figcaption.textContent = placeName;\r\n    super.open();\r\n  }\r\n}","/**\r\n * класс работающий с разметкой\r\n */\r\nexport default class Section {\r\n  /**\r\n   * @constructor\r\n   * @param {Function} funRenderer - callback для рендеринга исходного массива карточек\r\n   * @param {string} selectorCards - селектор html-блока со всеми карточками\r\n   */\r\n  constructor( funRenderer, selectorCards ) {\r\n    this._cards = document.querySelector( selectorCards );\r\n    this._renderer = funRenderer;\r\n  }\r\n\r\n  /**\r\n   * метод для рендера карточек с сервера\r\n   * @param {Array} data - массив объектов с данными карточки\r\n   */\r\n  renderCards( data ) {\r\n    for ( let i = data.length - 1; i > -1; i-- ){\r\n      this._renderer( data[ i ] );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * добавить новую карточку в разметку\r\n   * @param {HTMLElement} newElement - готовый html элемент для вставки\r\n   */\r\n  addItem = ( newElement ) => {\r\n    this._cards.prepend( newElement );\r\n  }\r\n}","/**\r\n * класс работающий с информацией о пользователе на странице\r\n */\r\nexport default class UserInfo {\r\n  /**\r\n   * @constructor\r\n   * @param {string} selectorNameUserContainer\r\n   * @param {string} selectorUserAboutContainer\r\n   * @param {string} selectorUserAvatar\r\n   */\r\n  constructor( { \r\n    selectorNameUserContainer, \r\n    selectorUserAboutContainer,\r\n    selectorUserAvatar \r\n  } ) {\r\n    // Примечание: при увеличении количества полей данных, код линейно вырастет в объеме\r\n    this._nameContainer = document.querySelector( selectorNameUserContainer );\r\n    this._aboutContainer = document.querySelector( selectorUserAboutContainer );\r\n    this._userAvatar = document.querySelector( selectorUserAvatar );\r\n  }\r\n\r\n  /**\r\n   * позволяет получить текущие данные пользователя\r\n   * @returns возвращает массив вида [name, about]\r\n   */\r\n  getUserInfo = () => {\r\n    // Примечание: важно, чтобы значение ключа совпадало со значением\r\n    // атрибута 'name' целевых input-элементов \r\n    return {\r\n      nameUser: this._nameContainer.textContent,\r\n      aboutUser: this._aboutContainer.textContent\r\n    }\r\n  }\r\n\r\n  /**\r\n   * позволяет установить новые данные пользователя\r\n   * @param {string} newName \r\n   * @param {string} newAbout \r\n   */\r\n  setUserInfo( newName, newAbout ) {\r\n    this._nameContainer.textContent = newName;\r\n    this._aboutContainer.textContent = newAbout;\r\n  }\r\n\r\n  /**\r\n   * Устанавливает ссылку на изображение для аватара\r\n   * @param {string} url \r\n   */\r\n  setAvatar( url ) {\r\n    this._userAvatar.src = url;\r\n  }\r\n\r\n  /**\r\n   * Устанавливает начальные значения \"Имя\", \"Обо мне\" и аватар\r\n   * @param {object} data данные о пользователе \r\n   */\r\n  setInitialUserInfo( data ){\r\n    this.setUserInfo( data.name, data.about );\r\n    this.setAvatar( data.avatar );\r\n  }\r\n}","/**\r\n * Класс, содержащий все необходимые fetch-запросы к серверу\r\n */\r\nexport default class Api {\r\n  /**\r\n   * @constructor\r\n   * @param {string} token токен для авторизации на сервере\r\n   * @param {string} myId личный id пользователя, назначенный сервером\r\n   * @param {string} urlServer\r\n   * @param {string} qUsersMe строка для запроса в users/me\r\n   * @param {string} qCards строка для запроса в cards\r\n   * @param {string} qLikes строка для запроса в likes\r\n   * @param {string} qAvatar строка для запроса в avatar\r\n   */\r\n  constructor({ \r\n    token, myId, urlServer, qUsersMe, qCards, qLikes, qAvatar\r\n  }) {\r\n    this._token = token;\r\n    this._urlServer = urlServer;\r\n    this._myId = myId;\r\n    this._qUsersMe = qUsersMe;\r\n    this._qCards = qCards;\r\n    this._qLikes = qLikes;\r\n    this._qAvatar = qAvatar;\r\n  }\r\n\r\n  /**\r\n   * Позволяет получить данные пользователя, необходимые для рендера связанных разделов\r\n   * @returns response данных пользователя\r\n   */\r\n  getUserDataFromServer() {\r\n    return fetch( this._urlServer + this._qUsersMe, {\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    })\r\n      .then( res => this._handleResponse( res ) )\r\n  }\r\n\r\n  /**\r\n   * Позволяет получить данные обо всех карточках с сервера\r\n   * @returns response начальных карточек\r\n   */\r\n  getInitialCards() {\r\n    return fetch( this._urlServer + this._qCards, {\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    })\r\n     .then( res => this._handleResponse( res ) )\r\n  }\r\n\r\n  /**\r\n   * Позволяет обновить \"Имя\" и \"О себе\" пользователя\r\n   * @param {string} newName \r\n   * @param {string} newAbout \r\n   * @returns \r\n   */\r\n  updateUserData( newName, newAbout ) {\r\n    return fetch( this._urlServer + this._qUsersMe, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: newName,\r\n        about: newAbout\r\n      })\r\n    })\r\n     .then( res => this._handleResponse( res ) )\r\n  }\r\n\r\n  /**\r\n   * Позволяет отправить данные новой карточки на сервер\r\n   * @param {string} namePlace \r\n   * @param {string} linkImg \r\n   * @returns response сервера с данными новой карточки\r\n   */\r\n  addNewCard( namePlace, linkImg ) {\r\n    return fetch( this._urlServer + this._qCards, {\r\n      method: 'POST',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: namePlace,\r\n        link: linkImg\r\n      })\r\n    })\r\n      .then( res => this._handleResponse( res ) )\r\n  }\r\n\r\n  /**\r\n   * Позволяет удалить по id карточку с сервера\r\n   * @param {string} id \r\n   * @returns response сервера об удалении\r\n   */\r\n  deleteCard( id ) {\r\n    return fetch( this._urlServer + this._qCards + id, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._token,\r\n      }\r\n    })\r\n      .then( res => this._handleResponse( res ) )\r\n  }\r\n\r\n  /**\r\n   * позволяет установить по id карточки лайк пользователя\r\n   * @param {string} id \r\n   * @returns response сервера с обновленными данными карточки (лайков)\r\n   */\r\n  setLike( id ){\r\n    return fetch( this._urlServer + this._qCards + id + this._qLikes, {\r\n      method: 'PUT',\r\n      headers: {\r\n        authorization: this._token,\r\n      }\r\n    })\r\n     .then( res => this._handleResponse( res ) )\r\n  }\r\n\r\n  /**\r\n  * позволяет удалить по id карточки лайк пользователя\r\n  * @param {string} id \r\n  * @returns response сервера с обновленными данными карточки (лайков)\r\n  */\r\n  deleteLike( id ) {\r\n    return fetch( this._urlServer + this._qCards + id + this._qLikes, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._token,\r\n      }\r\n    })\r\n      .then( res => this._handleResponse( res ) )\r\n  }\r\n\r\n  /**\r\n   * Позволяет обновить аватар пользователя\r\n   * @param {string} newAvatarUrl \r\n   * @returns response сервера о смене аватара\r\n   */\r\n  updateAvatar( newAvatarUrl ) {\r\n    return fetch( this._urlServer + this._qUsersMe + this._qAvatar , {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: newAvatarUrl\r\n      })\r\n    })\r\n     .then( res => this._handleResponse( res ) )\r\n  }\r\n\r\n  _handleResponse( res ){\r\n    return !res.ok\r\n      ? Promise.reject( res.status )\r\n      : res.json();\r\n  }\r\n}","import Popup from \"./Popup.js\";\r\n\r\n/**\r\n * Класс описывает функционал модального окна подтверждения удаления карточки\r\n */\r\nexport default class PopupCardDelete extends Popup{\r\n  /**\r\n   * @constructor\r\n   * @param {object} popupConfig\r\n   * @param {string} popupSelector\r\n   * @param {string} nameForm\r\n   */\r\n  constructor({ \r\n    popupConfig, popupSelector, nameForm, \r\n    btnSubmitSelector, btnSubmitFetchCondition \r\n  }) {\r\n    super( popupConfig, popupSelector );\r\n    this._delCard;\r\n    this._form = document.forms[nameForm];\r\n    this._btnSubmitFetchCondition = btnSubmitFetchCondition;\r\n    this._btnSubmit = this._form.querySelector( btnSubmitSelector );\r\n    this._btnSubmitOriginalText = this._btnSubmit.textContent;\r\n  }\r\n\r\n  /**\r\n   * Устанавливает слушатели на модальное окно.\r\n   */\r\n  setEventListeners() {\r\n    super.setEventListeners();\r\n    this._form.addEventListener( 'submit', (ev) => {\r\n      this._btnSubmit.textContent = this._btnSubmitFetchCondition;\r\n      ev.preventDefault();\r\n      this._delCard();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Открывает модальное окно подтвержедения удаления карточки.\r\n   * Прокидыает функцию удаления конкретно этой карточки.\r\n   * @param {Function} callback \r\n   */\r\n  open( callback ) {\r\n    this._delCard = callback;\r\n    super.open()\r\n  }\r\n}","// Примечание: уточнить, что значит \"Обрабатывайте ошибку внутри этого блока. Если нет времени писать сложную логику, хотя бы просто выведите ошибку в консоль.\" Что подразумевается под сложной логикой. Какую обработку ошибок имеют ввиду.\r\n// Примечание: уточнить на счет async/await и .then\\.catch - есть ли преимущества? Как выбрать?\r\n\r\n// импорты\r\nimport './index.css';\r\nimport Card from '../components/Card.js';\r\nimport FormValidator from '../components/FormValidator.js';\r\nimport PopupWithForm from '../components/PopupWithForm.js';\r\nimport PopupWithImage from '../components/PopupWithImage.js';\r\nimport Section from '../components/Section.js';\r\nimport UserInfo from '../components/UserInfo.js';\r\nimport Api from '../components/Api.js';\r\nimport PopupCardDelete from '../components/PopupCardDelete';\r\nimport {\r\n  btnEditProfile, btnAddPlace, cardConfig, btnEditAvatar, validateConfig,\r\n  popupWithImageConfig, popupAddPlaceConfig, popupEditProfileConfig,\r\n  selectorCards, userInfoConfig, apiConfig, popupConfirmDeleteConfig,\r\n  popupEditAvatarConfig, errMsg,\r\n } from '../utils/constants.js';\r\n\r\n// Переменные\r\nlet myId;\r\n\r\n// функции\r\nfunction createCardConfigProperties( data ) {\r\n  return {\r\n    config: cardConfig,\r\n    placeName: data.name,\r\n    placeImgSrc: data.link,\r\n    likes: data.likes,\r\n    ownerId: data.owner._id,\r\n    myId: myId,\r\n  }\r\n}\r\n\r\n// Примечание: здесь я прописываю callback, который будет реализован внутри класса, разве нужно здесь использовать публичные методы класса? Ведь каждый из этих методов не будет реализован в index.js, они все будут исполнены внутри класса. Аналогично приватные свойства.\r\nfunction renderer( data ) {\r\n  const cardObject = new Card(\r\n    createCardConfigProperties( data ),\r\n    {\r\n      handleCardClick: () => popupWithImage.open( data.link, data.name ),\r\n      setLikeOnServer: () => api.setLike( data._id ),\r\n      deleteLikeFromServer: () => api.deleteLike( data._id ),\r\n      handleLikeClick: () =>  {\r\n        cardObject.toggleLikeConditionOnserver()\r\n          .then( data => {\r\n            cardObject.setCountLikes( data.likes );\r\n            cardObject.doLikeActive();\r\n          })\r\n          .catch( err => alert( errMsg + err ) )\r\n          .finally( cardObject.toggleflagCondition );\r\n      },\r\n      // примечание: vsc предложил переписать promise.then.catch на async\\await\\try\\catch - зачем?\r\n      confirmDelete: () => popupConfirmDeleteCard.open( async () => {\r\n        try {\r\n          await api.deleteCard(data._id);\r\n          cardObject.deleteCard();\r\n          popupConfirmDeleteCard.close();\r\n        } catch (err) {\r\n          alert(errMsg + err);\r\n        }\r\n      }),\r\n    }\r\n  );\r\n  const newCard = cardObject.getPlaceCard();\r\n  cards.addItem( newCard );\r\n}\r\n\r\nconst handlerSubmitPopupEditProfile =  ({ nameUser, aboutUser }) => {\r\n  api.updateUserData( nameUser, aboutUser )\r\n    .then( () => {\r\n      userInfo.setUserInfo( nameUser, aboutUser );\r\n      popupEditProfile.close();\r\n    })\r\n    .catch( err => alert( errMsg + err ) )\r\n    .finally( popupEditProfile.toggleBtnSubmitText );\r\n}\r\n\r\nconst handlerSubmitPopupAddCard = ({ namePlace, urlImage }) => {\r\n    api.addNewCard( namePlace, urlImage )\r\n      .then( data => {\r\n        renderer( data );\r\n        popupAddCard.close();\r\n      })\r\n      .catch( err => alert( 'Произошла какая-то ошибка...\\n' + err ) )\r\n      .finally( popupEditProfile.toggleBtnSubmitText );\r\n}\r\n\r\nconst handlerSubmitPopupEditAvatar = ( { urlImage } ) => {\r\n  api.updateAvatar( urlImage )\r\n    .then( data => {\r\n      userInfo.setAvatar( data.avatar );\r\n      popupEditAvatar.close();\r\n    })\r\n    .catch( err => alert( 'Произошла какая-то ошибка...\\n' + err ) )\r\n    .finally( popupEditProfile.toggleBtnSubmitText );\r\n}\r\n\r\n// объекты классов\r\nconst popupConfirmDeleteCard = new PopupCardDelete( popupConfirmDeleteConfig );\r\nconst popupWithImage = new PopupWithImage( popupWithImageConfig ); \r\nconst userInfo = new UserInfo( userInfoConfig );\r\nconst api = new Api( apiConfig );\r\nconst cards = new Section( renderer, selectorCards );\r\n\r\nconst popupEditProfile = new PopupWithForm( popupEditProfileConfig, handlerSubmitPopupEditProfile );\r\nconst popupAddCard = new PopupWithForm( popupAddPlaceConfig, handlerSubmitPopupAddCard);\r\nconst popupEditAvatar = new PopupWithForm( popupEditAvatarConfig, handlerSubmitPopupEditAvatar);\r\n\r\n// Запуск скриптов\r\nPromise.all([ \r\n  api.getUserDataFromServer(), \r\n  api.getInitialCards()\r\n])\r\n  .then( ([ dataOne, dataTwo ]) => {\r\n    userInfo.setInitialUserInfo( dataOne );\r\n    myId = dataOne._id;\r\n    cards.renderCards( dataTwo );\r\n  })\r\n  .catch( ([ errOne, errTwo ]) => alert( errOne, errTwo ) )\r\n\r\npopupWithImage.setEventListeners();\r\npopupAddCard.setEventListeners();\r\npopupEditProfile.setEventListeners();\r\npopupConfirmDeleteCard.setEventListeners();\r\npopupEditAvatar.setEventListeners();\r\n\r\n// Примечание: нижестоящий код пытается повесить валиадцию на форму без инпутов.\r\n// Мысли: имеется форма без инпутов, для которой валидация ненужна. Соответственно, её следовало бы исключить. Это можно сделать, составив список исключений и сверяться внутри перебора, но т.к. она не содержит инпутов, а следовательно и некуда установить листенеры, система потратит ресурсы только на попытку подключить валидацию. Создание списка исключений же задействует еще немного памяти и я не уверен, что это стоящая оптимизация.\r\n// Также можно попробовать сверяться с содержимым формы: если есть инпуты, то... через form.elements, но это также ресурсы на проверку того, что в принципе не будет потреблять ресурсы, т.к. не существует (нельзя установить валидацию на то, чего нет)\r\n// Итог: оставить в текущем виде, ждать комментариев от ревьюера или позднее уточнить у наставника\r\nArray.from( document.forms ).forEach( form => {\r\n  const newValidator = new FormValidator ( validateConfig, form );\r\n  newValidator.enableValidation();\r\n} );\r\n\r\nbtnEditAvatar.addEventListener( 'click', popupEditAvatar.open )\r\nbtnAddPlace.addEventListener( 'click', popupAddCard.open );\r\nbtnEditProfile.addEventListener( 'click', () => {\r\n  popupEditProfile.setInputValues( userInfo.getUserInfo() );\r\n  popupEditProfile.open() \r\n});\r\n\r\n// включить анимацию на страничке\r\nsetTimeout( () => document.querySelector( '.preload' ).classList.remove( 'preload' ), 500 );","// Кнопки\r\nexport const btnEditProfile = document.querySelector('.profile__btn-edit');\r\nexport const btnAddPlace = document.querySelector('.profile__btn-add');\r\nexport const btnEditAvatar = document.querySelector('.profile__avatar-edit');\r\n\r\n// Селекторы\r\nexport const selectorCards = '.cards__grid';\r\nexport const errMsg = 'Произошла какая-то ошибка...\\n';\r\n\r\n// Служебные\r\nconst inputSelector = '.popup__input';\r\nconst popupBtnSubmitSelector = '.popup__btn-submit';\r\nconst btnSubmitFetchCondition = 'Сохранение...';\r\nconst popupConfig = {\r\n  classBtnClose: 'popup__btn-close',\r\n  classPopupOpened: 'to-visible'\r\n}\r\n\r\n// Конфиги\r\nexport const popupWithImageConfig = {\r\n  popupConfig: popupConfig,\r\n  popupSelector: '.popup_type_full-img-place',\r\n  figureSelector: '.popup__figure',\r\n  imgSelector: '.popup__img',\r\n  figcaptionSelector: '.popup__figcaption'\r\n}\r\n\r\nexport const popupAddPlaceConfig = {\r\n  popupConfig: popupConfig,\r\n  inputSelector: inputSelector,\r\n  popupSelector: '.popup_type_add-place',\r\n  nameForm: 'addNewPlace',\r\n  btnSubmitSelector: popupBtnSubmitSelector,\r\n  btnSubmitFetchCondition: btnSubmitFetchCondition,\r\n}\r\n\r\nexport const popupEditProfileConfig = {\r\n  popupConfig: popupConfig,\r\n  inputSelector: inputSelector,\r\n  popupSelector: '.popup_type_edit-profile',\r\n  nameForm: 'editProfileText',\r\n  btnSubmitSelector: popupBtnSubmitSelector,\r\n  btnSubmitFetchCondition: btnSubmitFetchCondition,\r\n}\r\n\r\nexport const userInfoConfig = {\r\n  selectorNameUserContainer: '.profile__title-name',\r\n  selectorUserAboutContainer: '.profile__subtitle',\r\n  selectorUserAvatar: '.profile__avatar'\r\n}\r\n\r\nexport const validateConfig = {\r\n  inputSelector: inputSelector,\r\n  submitBtnSelector: '.popup__btn-submit',\r\n  inputUnvalidateClass: 'popup__input_type_error',\r\n  errorSelector: '.popup__error',\r\n};\r\n\r\nexport const cardConfig = {\r\n  cardSelector: '.cards__grid-item',\r\n  imgSelector: '.card__photo',\r\n  titleSelector: '.card__title',\r\n  likeSelector: '.card__like',\r\n  btnDelSelector: '.card__del-card-btn',\r\n  classLikeActive: 'card__like_active',\r\n  templateSelector: '.template',\r\n  countLikeSelector: '.card__like-count',\r\n  btnDellHiddenClass: 'to-visible'\r\n}\r\n\r\nexport const apiConfig = {\r\n  token: 'e07a98d9-da5b-4bb3-83f5-8be59ad95ea9',\r\n  myId: '7fe16738c600cfe949208d93', \r\n  urlServer: 'https://mesto.nomoreparties.co/v1/cohort-65/',\r\n  qUsersMe: 'users/me',\r\n  qCards: 'cards/',\r\n  qLikes: '/likes/',\r\n  qAvatar: '/avatar'\r\n}\r\n\r\nexport const popupConfirmDeleteConfig = {\r\n  popupConfig: popupConfig,\r\n  popupSelector: '.popup_type_confirmDelete',\r\n  nameForm: 'confirmCardDelete',\r\n  btnSubmitSelector: popupBtnSubmitSelector,\r\n  btnSubmitFetchCondition: 'Удаление...',\r\n}\r\n\r\nexport const popupEditAvatarConfig = {\r\n  popupConfig: popupConfig,\r\n  inputSelector: inputSelector,\r\n  popupSelector: '.popup_type_editAvatar',\r\n  nameForm: 'avatarUpdate',\r\n  btnSubmitSelector: popupBtnSubmitSelector,\r\n  btnSubmitFetchCondition: btnSubmitFetchCondition,\r\n}"],"names":["Card","_ref","_ref2","_this","placeName","placeImgSrc","likes","config","ownerId","myId","handleCardClick","confirmDelete","setLikeOnServer","deleteLikeFromServer","handleLikeClick","_classCallCheck","_defineProperty","document","querySelector","_templateSelector","content","_placesItemSelector","cloneNode","_imgLike","classList","contains","_classLikeActive","_deleteLikeFromServer","_setLikeOnServer","_isLikeInProcess","toggleflagCondition","_handleLikeClick","_img","addEventListener","_handeCardClick","_placeImgSrc","_placeName","_toggleLikeCondition","_btnPlaceDel","_confirmDelete","_placeElement","remove","src","alt","concat","_imgTitle","textContent","setCountLikes","_likes","_checkOwner","_checkMyLike","_ownerCardId","_myId","add","_btnDellHiddenClass","toggle","forEach","element","_id","doLikeActive","_fillCard","_setEventListeners","this","templateSelector","cardSelector","classLikeActive","btnDellHiddenClass","_getPlaceElement","imgSelector","titleSelector","likeSelector","btnDelSelector","_countLikeContainer","countLikeSelector","key","value","length","FormValidator","form","formSelector","Array","from","querySelectorAll","_inputList","some","input","_checkValidity","textError","errorElement","inputElement","_inputUnvalidateClass","_hideInputError","_showInputError","validationMessage","_hasInvalidInput","_btnSubmit","setAttribute","removeAttribute","_form","ev","preventDefault","index","_errorList","_toggleButtonState","_checkInputValidity","inputUnvalidateClass","_getFormElements","inputSelector","errorSelector","submitBtnSelector","item","validity","valid","Popup","popupSelector","classBtnClose","classPopupOpened","_classPopupOpened","_classBtnClose","_popup","_handleEscClose","bind","open","close","removeEventListener","target","PopupWithForm","_Popup","_inherits","_super","callbackSubmit","popupConfig","nameForm","btnSubmitSelector","btnSubmitFetchCondition","_assertThisInitialized","call","values","_inputs","i","getAttribute","_btnSubmitOriginalText","_btnSubmitFetchCondition","_callbackSubmit","_classInput","forms","reduce","data","_this2","_get","_getPrototypeOf","prototype","_fetchCondition","toggleBtnSubmitText","_getInputValues","reset","PopupWithImage","figureSelector","figcaptionSelector","_figure","_figureImg","_figcaption","Section","funRenderer","selectorCards","newElement","_cards","prepend","_renderer","UserInfo","selectorNameUserContainer","selectorUserAboutContainer","selectorUserAvatar","nameUser","_nameContainer","aboutUser","_aboutContainer","_userAvatar","newName","newAbout","url","setUserInfo","name","about","setAvatar","avatar","Api","token","urlServer","qUsersMe","qCards","qLikes","qAvatar","_token","_urlServer","_qUsersMe","_qCards","_qLikes","_qAvatar","fetch","headers","authorization","then","res","_handleResponse","_this3","method","body","JSON","stringify","namePlace","linkImg","_this4","link","id","_this5","_this6","_this7","newAvatarUrl","_this8","ok","json","Promise","reject","status","PopupCardDelete","_delCard","callback","btnEditProfile","btnAddPlace","btnEditAvatar","errMsg","popupBtnSubmitSelector","popupWithImageConfig","popupAddPlaceConfig","popupEditProfileConfig","validateConfig","cardConfig","popupEditAvatarConfig","_regeneratorRuntime","exports","Op","Object","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","record","result","_typeof","__await","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","iterable","iteratorMethod","isNaN","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","renderer","cardObject","owner","createCardConfigProperties","popupWithImage","api","setLike","deleteLike","toggleLikeConditionOnserver","alert","finally","popupConfirmDeleteCard","_callee","_context","deleteCard","t0","newCard","getPlaceCard","cards","addItem","userInfo","popupEditProfile","updateUserData","popupAddCard","_ref3","urlImage","addNewCard","popupEditAvatar","_ref4","updateAvatar","all","getUserDataFromServer","getInitialCards","_ref5","_ref6","_slicedToArray","dataOne","dataTwo","setInitialUserInfo","renderCards","_ref7","_ref8","errOne","errTwo","setEventListeners","enableValidation","setInputValues","getUserInfo","setTimeout"],"sourceRoot":""}